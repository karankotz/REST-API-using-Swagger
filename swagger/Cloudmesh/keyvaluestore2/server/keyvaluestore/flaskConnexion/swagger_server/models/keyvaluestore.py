# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class KEYVALUESTORE(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, key_value_store=None):  # noqa: E501
        """KEYVALUESTORE - a model defined in Swagger

        :param key_value_store: The key_value_store of this KEYVALUESTORE.  # noqa: E501
        :type key_value_store: str
        """
        self.swagger_types = {
            'key_value_store': str
        }

        self.attribute_map = {
            'key_value_store': 'KeyValueStore'
        }

        self._key_value_store = key_value_store

    @classmethod
    def from_dict(cls, dikt):
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The KEYVALUESTORE of this KEYVALUESTORE.  # noqa: E501
        :rtype: KEYVALUESTORE
        """
        return util.deserialize_model(dikt, cls)

    @property
    def key_value_store(self):
        """Gets the key_value_store of this KEYVALUESTORE.


        :return: The key_value_store of this KEYVALUESTORE.
        :rtype: str
        """
        return self._key_value_store

    @key_value_store.setter
    def key_value_store(self, key_value_store):
        """Sets the key_value_store of this KEYVALUESTORE.


        :param key_value_store: The key_value_store of this KEYVALUESTORE.
        :type key_value_store: str
        """
        if key_value_store is None:
            raise ValueError("Invalid value for `key_value_store`, must not be `None`")  # noqa: E501

        self._key_value_store = key_value_store
